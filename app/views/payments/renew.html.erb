<%render 'shared/notice' %>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SmartEdu Attendance</title>
  <script src="https://cdn.tailwindcss.com"></script>

</head>

<body class="flex flex-col min-h-screen bg-gray-50">
<div class="navbar bg-white fixed top-0 left-0 w-full z-50 shadow-md h-20 flex items-center px-6">
  <div class="navbar bg-white fixed top-0 left-0 w-full z-50 shadow-md h-20 flex items-center px-6">
    <div class="flex-1">
    <span class="text-4xl font-bold flex items-center">
      <%= render "shared/logo_text" %>
      <span class="text-gray-800"><%= content_for :title %></span>
    </span>
    </div>
    <div class="flex-none">
      <%= link_to 'Home', root_url, class: 'btn btn-secondary px-6 py-2 text-xl mr-4' %>
      <%= link_to 'Login', new_session_path, class: 'btn btn-primary px-8 py-2 text-xl' %>
    </div>
  </div>
</div>

<div class="flex-grow pt-32 pb-20">
  <div class="student-card max-w-md mx-auto bg-white rounded-lg shadow-md p-6" data-turbo-permanent id="payment-wizard-container">
    <h1 class="student-title">Renew Your Payment</h1>

    <!-- Progress bar -->
    <div class="flex mb-8 relative">
      <div class="flex-1 relative">
        <div class="w-8 h-8 bg-blue-500 text-white rounded-full mx-auto flex items-center justify-center border-2 border-gray-200">1</div>
        <p class="text-center text-xs mt-1">Personal</p>
      </div>
      <div class="flex-1 relative">
        <div class="w-8 h-8 bg-gray-200 text-gray-600 rounded-full mx-auto flex items-center justify-center border-2 border-gray-200">2</div>
        <p class="text-center text-xs mt-1">Amount</p>
      </div>
      <div class="flex-1 relative">
        <div class="w-8 h-8 bg-gray-200 text-gray-600 rounded-full mx-auto flex items-center justify-center border-2 border-gray-200">3</div>
        <p class="text-center text-xs mt-1">Payment</p>
      </div>
      <div class="flex-1 relative">
        <div class="w-8 h-8 bg-gray-200 text-gray-600 rounded-full mx-auto flex items-center justify-center border-2 border-gray-200">4</div>
        <p class="text-center text-xs mt-1">Review</p>
      </div>
      <div class="absolute top-4 left-0 w-full h-0.5 bg-gray-200 -z-10"></div>
    </div>

    <!-- Steps content -->
    <div id="payment-form-wizard">
      <!-- Step 1: Personal Information -->
      <div class="py-5" id="step-1">
        <h2 class="text-2xl font-bold mb-6">Personal Information</h2>
        <div class="mb-5">
          <label for="first_name" class="block mb-2 font-medium">First Name</label>
          <input type="text" id="first_name" name="first_name"
                 class="input input-bordered w-full" required value="<%= @user.first_name%>">
        </div>
        <div class="mb-5">
          <label for="last_name" class="block mb-2 font-medium">Last Name</label>
          <input type="text" id="last_name" name="last_name"
                 class="input input-bordered w-full" required value="<%= @user.last_name%>">
        </div>
        <div class="mb-5">
          <label for="email" class="block mb-2 font-medium">Email</label>
          <input type="email" id="email" name="email"
                 class="input input-bordered w-full" required value="<%= @user.email_address%>">
        </div>
        <div class="mb-5">
          <label for="school_name" class="block mb-2 font-medium">School Name</label>
          <input type="text" id="school_name" name="School Name"
                 class="input input-bordered w-full" required value="<%= @user.school.name%>">
        </div>
        <div class="mb-5">
          <label for="school_address" class="block mb-2 font-medium">School Address</label>
          <input type="text" id="school_address" name="School Address"
                 class="input input-bordered w-full" required value="<%= @user.school.address%>">
        </div>
        <div class="flex justify-end mt-8">
          <button type="button" id="next-to-2"
                  class="btn btn-primary w-full">Next</button>
        </div>
      </div>

      <!-- Step 2: Amount -->
      <div class="hidden py-5 px-6 bg-white rounded-lg shadow-md" id="step-2">
        <h2 class="text-2xl font-bold mb-6 text-gray-800">Payment Amount</h2>

        <!-- Tier Selection -->
        <div class="mb-6">
          <div class="block text-lg font-medium mb-3 text-gray-700">Choose Tier</div>

          <div class="space-y-4">
            <!-- Tier 1 -->
            <label class="block p-4 border border-gray-300 rounded-lg hover:border-blue-500 cursor-pointer">
              <input type="radio" name="tier" value="200" checked class="mr-2" onchange="calculateTierAmount()" />
              <span class="font-semibold text-gray-900">Basic</span>
              <p class="text-sm text-gray-600">200 Baht per student</p>
              <p class="text-sm text-gray-500">Manual Checking Attendance</p>
            </label>

            <!-- Tier 2 -->
            <label class="block p-4 border border-gray-300 rounded-lg hover:border-blue-500 cursor-pointer">
              <input type="radio" name="tier" value="350" class="mr-2" onchange="calculateTierAmount()" />
              <span class="font-semibold text-gray-900">Premium</span>
              <p class="text-sm text-gray-600">350 Baht per student</p>
              <p class="text-sm text-gray-500">Automatic Checking Attendance with QR Code</p>
              <p class="text-sm text-gray-500">Parent Notifications through Emailing</p>
            </label>
          </div>
        </div>

        <!-- Student Count Input -->
        <div class="mb-6">
          <label for="student_count" class="block text-lg font-medium mb-2 text-gray-700">Number of Students</label>
          <input
            type="number" id="student_count" name="student_count"
            min="1" class="input input-bordered w-full"
            required oninput="calculateTierAmount()"
            />
        </div>

        <input type="hidden" id="amount" name="amount" value="0" />


        <div class="flex justify-between mt-8">
          <button type="button" id="prev-to-1" class="btn">Back</button>
          <button type="button" id="next-to-3" class="btn btn-primary flex">Next</button>
        </div>
      </div>

      <!-- Step 3: Payment Method -->
      <div class="hidden py-5" id="step-3">
        <h2 class="text-2xl font-bold mb-6">Payment Method</h2>
        <div class="mb-5">
          <label for="card-element" class="block mb-2 font-medium">Credit or debit card</label>
          <div class="card-input-container border border-gray-300 rounded-md p-3 bg-white">
            <div id="card-element" class="h-10"></div>
          </div>
          <div id="card-errors" class="text-red-500 mt-1 text-sm"></div>
        </div>
        <div class="flex justify-between mt-8">
          <button type="button" id="prev-to-2" class="btn">Back</button>
          <button type="button" id="next-to-4" class="btn btn-primary flex">Next</button>
        </div>
      </div>

      <!-- Step 4: Review -->
      <div class="hidden py-5" id="step-4">
        <h2 class="text-2xl font-bold mb-6">Review Your Information</h2>
        <div class="bg-gray-50 p-4 rounded-lg mb-6">
          <div class="mb-5 border-b border-gray-100 pb-3">
            <h3 class="text-lg font-semibold mb-2">Personal Information</h3>
            <p><strong>Name:</strong> <span id="review-name" class="ml-2"></span></p>
            <p><strong>Email:</strong> <span id="review-email" class="ml-2"></span></p>
            <p><strong>School Name:</strong> <span id="review-school-name" class="ml-2"></span></p>
            <p><strong>School Address:</strong> <span id="review-school-address" class="ml-2"></span></p>
            <p><strong>Tier:</strong> <span id="review-tier" class="ml-2"></span></p>
          </div>
          <div class="mb-5 border-b border-gray-100 pb-3">
            <h3 class="text-lg font-semibold mb-2">Amount</h3>
            <p><strong>Total:</strong> <span class="ml-2">à¸¿<span id="review-amount"></span></span></p>
          </div>
          <div class="mb-5 border-b border-gray-100 pb-3">
            <h3 class="text-lg font-semibold mb-2">Payment Method</h3>
            <p> Credit Card <span id="review-card-last4"></span></p>
          </div>

        </div>
        <div class="flex justify-between mt-8">
          <button type="button" id="prev-to-3" class="btn">Back</button>
          <button type="button" id="submit-payment" class="btn btn-primary flex">Complete Payment</button>
        </div>
      </div>
    </div>
  </div>
</div>


<%= javascript_include_tag "https://js.stripe.com/v3/", "data-turbo-track": "reload" %>


<!-- ----------------- -->

<!-- Not working when move the js/controller files. Because of the required key from -->
<!--[Rails.application.credentials.dig(:stripe, :publishable_key]  -->

<!-- ----------------- -->

<script>

    function calculateTierAmount() {
        const tier = parseInt(document.querySelector('input[name="tier"]:checked').value, 10) || 0;
        const studentCount = parseInt(document.getElementById('student_count').value, 10) || 0;
        document.getElementById('amount').value = tier * studentCount;
        document.getElementById('tier').value = tier;
    }

    document.addEventListener("DOMContentLoaded", function () {
        console.log("Payment form script loaded");

        // Step navigation listeners
        document.getElementById('next-to-2').addEventListener('click', function () {
            validateAndGoToStep(1, 2);
        });

        document.getElementById('prev-to-1').addEventListener('click', function () {
            goToStep(1);
        });

        document.getElementById('next-to-3').addEventListener('click', function () {
            validateAndGoToStep(2, 3);
        });

        document.getElementById('prev-to-2').addEventListener('click', function () {
            goToStep(2);
        });

        document.getElementById('next-to-4').addEventListener('click', function () {
            validateAndGoToStep(3, 4);
        });

        document.getElementById('prev-to-3').addEventListener('click', function () {
            goToStep(3);
        });

        // Initialize Stripe on step 3 and variables for tracking progress
        let currentStep = 1;
        let stripe = null;
        let card = null;
        let cardComplete = false;
        let last4 = null;

        function validateAndGoToStep(currentStep, nextStep) {
            if (validateStep(currentStep)) {
                if (nextStep === 4) {
                    updateReviewInformation();
                }
                goToStep(nextStep);
            }
        }


        function goToStep(stepNumber) {
            // Hide all steps first
            document.querySelectorAll('#payment-form-wizard > div').forEach(step => {
                step.classList.add('hidden');
            });

            // Show only the current step
            document.getElementById(`step-${stepNumber}`).classList.remove('hidden');

            // Update progress bar indicators
            updateProgressBar(stepNumber);

            // Initialize Stripe if going to step 3
            if (stepNumber === 3) {
                initializeStripe();
            }

            currentStep = stepNumber;
        }

        function updateProgressBar(stepNumber) {
            // Reset all step indicators
            const stepIndicators = document.querySelectorAll('#payment-wizard-container .flex-1 > div:first-child');
            stepIndicators.forEach((indicator, index) => {
                if (index + 1 < stepNumber) {
                    indicator.classList.remove('bg-gray-200', 'text-gray-600', 'bg-blue-500', 'text-white');
                    indicator.classList.add('bg-green-500', 'text-white', 'border-green-500');
                } else if (index + 1 === stepNumber) {
                    indicator.classList.remove('bg-gray-200', 'text-gray-600', 'bg-green-500');
                    indicator.classList.add('bg-blue-500', 'text-white', 'border-blue-500');
                } else {
                    indicator.classList.remove('bg-blue-500', 'text-white', 'bg-green-500', 'border-green-500', 'border-blue-500');
                    indicator.classList.add('bg-gray-200', 'text-gray-600', 'border-gray-200');
                }
            });
        }


        function validateStep(step) {
            switch (step) {
                case 1:
                    const firstName = document.getElementById('first_name').value;
                    const lastName = document.getElementById('last_name').value;
                    const email = document.getElementById('email').value;
                    const schoolName = document.getElementById('school_name').value;
                    const schoolAddress = document.getElementById('school_address').value;

                    if (!firstName || !lastName || !email || !schoolName || !schoolAddress) {
                        alert('Please fill in all required fields');
                        return false;
                    }

                    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                    if (!emailRegex.test(email)) {
                        alert('Please enter a valid email address');
                        return false;
                    }


                    return true;
                case 2:
                    const amount = document.getElementById('amount').value;
                    if (!amount || amount <= 0) {
                        alert('Please enter a valid amount');
                        return false;
                    }
                    return true;
                case 3:
                    if (!cardComplete) {
                        alert('Please complete the card information');
                        return false;
                    }
                    return true;
                default:
                    return true;
            }
        }

        function initializeStripe() {
            const cardElement = document.getElementById('card-element');
            if (!cardElement) return;

            const publishableKey = "<%= Rails.application.credentials.dig(:stripe, :publishable_key) %>";
            if (!stripe) {
                stripe = Stripe(publishableKey);
            }

            if (card) {
                card.destroy();
            }

            const elements = stripe.elements();
            card = elements.create("card");
            card.mount("#card-element");

            card.addEventListener('change', (event) => {
                const displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                    cardComplete = false;
                } else {
                    displayError.textContent = '';
                    cardComplete = event.complete;
                    if (event.complete && event.value.card) {
                        last4 = event.value.card.last4;
                        console.log("Card Last 4", last4);
                    }
                }
            });
        }

        function updateReviewInformation() {
            const firstName = document.getElementById('first_name').value;
            const lastName = document.getElementById('last_name').value;
            const amount = document.getElementById('amount').value;
            const email = document.getElementById('email').value;
            const schoolName = document.getElementById('school_name').value;
            const schoolAddress = document.getElementById('school_address').value;
            let tier = document.querySelector('input[name="tier"]:checked').value;

            if (tier === "200") {
                tier = "Basic";
            } else if (tier == "350") {
                tier = "Premium";
            }



            document.getElementById('review-name').textContent = `${firstName} ${lastName}`;
            document.getElementById('review-amount').textContent = amount
            document.getElementById('review-email').textContent = email;
            document.getElementById('review-school-name').textContent = schoolName;
            document.getElementById('review-school-address').textContent = schoolAddress;
            document.getElementById('review-tier').textContent = tier;
            document.getElementById('review-card-last4').textContent = last4 ? `(**** **** **** ${last4})` : "";

        }



        // Handle payment form submission
        document.getElementById('submit-payment').addEventListener('click', async function () {
            const firstName = document.getElementById('first_name').value;
            const lastName = document.getElementById('last_name').value;
            const amount = document.getElementById('amount').value;
            const email = document.getElementById('email').value;
            const schoolName = document.getElementById('school_name').value;
            const schoolAddress = document.getElementById('school_address').value;
            const tier = document.querySelector('input[name="tier"]:checked').value;

            const submitButton = document.getElementById('submit-payment');
            submitButton.disabled = true;
            submitButton.textContent = 'Processing...';


            try {
                const {paymentMethod, error} = await stripe.createPaymentMethod({
                    type: "card",
                    card: card,
                    billing_details: {
                        name: `${firstName} ${lastName}`,

                    }
                });

                if (error) {
                    alert(error.message);
                    submitButton.disabled = false;
                    submitButton.textContent = 'Complete Payment';
                    return;
                }

                const response = await fetch("/payments/renew_payment", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "X-CSRF-Token": "<%= form_authenticity_token %>"
                    },
                    body: JSON.stringify({
                        first_name: firstName,
                        last_name: lastName,
                        amount: parseInt(amount),
                        payment_method_id: paymentMethod.id,
                        email : email,
                        schoolAddress: schoolAddress,
                        school_name: schoolName,
                        tier: tier
                    }),
                });

                if (response.ok) {
                    window.location.href = "/payments/success";
                } else {
                    alert("Payment failed!");
                    submitButton.disabled = false;
                    submitButton.textContent = 'Complete Payment';
                }
            } catch (e) {
                alert("An unexpected error occurred: " + e.message);
                submitButton.disabled = false;
                submitButton.textContent = 'Complete Payment';
            }
        });
    });


</script>
